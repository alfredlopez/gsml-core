#This file sets all the Start Up properties for the Client library.
#You can also override the default properties files for other parts of the application
#by using the original file name as the key, e.g.


#(Optional) Set this to identify which application is "broadcasting". This is simply used for logging and the value
#   can be anything.
gsml_app=Alfred's Test Machine

#secretKey is used to decrypt tokens
#ALWAYS_SET_PER_ENVIRONMENT is not the key, but rather a "tag" that indicates this property must be set
#per environment.
gsmlSecretKey=ALWAYS_SET_PER_ENVIRONMENT

#Some classes in GSML that require external configurations will look for a specific properties file.
# As an example,
# BroadcastListenerConfigurator looks for the file "broadcastListener.properties"
# To override, set a property with key "broadcastListener.properties" and the value to the new file name.
# e.g.
#    broadcasterListener.properties=myOtherBroadcastListener.properties
# After GSML loads this properties file (suc.properties) it will search load any properties file that is indicated
# here. When the class in question (e.g., BroadcastListenerConfigurator) "loads" its properties file, it will have
# the properties from the deferred file (e.g., myOtherBroadcastListener.properties).
# This is in addition to creating "derivative" properties files, like DEV_suc.properties, which will be loaded if
# the ENV environment variable is set. Keep in mind that derivative properties files are override only. In other words,
# adding new property values has no effect and won't be picked up by the configuration framework.